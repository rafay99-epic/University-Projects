

CHESS.H

#pragma once
#include<iostream>
#include<string>

using namespace std;

class CHESS
{
protected:
	string movement[4][8] = {
		"A","B","C","D","E","F","G","H",
		"I","J","K","L","M","N","O","P",
		"Q","R","S","T","V","W","X","Y",
		"Z","a","b","c","d","e","f","g"
	};
	string king[2] = { "K","K" };
	string queen[2] = { "Q","Q" };
	string rock[4] = { "R","R","R","R" };
	string bishops[4] = { "B","B","B","B" };
	string knight[4] = { "K","K","K","K" };
	string pawn[16] = {
		"p","p","p","p",
		"p","p","p","p",
		"p","p","p","p",
		"p","p","p","p"
	};
	//string choice;
public:
	string choice;
	void display();
	void value1();
	void value2();
	CHESS();
	~CHESS();
	//string turn();
};



                                CHESS.CCP 



#include "CHESS.h"
#include<iostream>
#include<string>

using namespace std;

CHESS::CHESS()
{
}


CHESS::~CHESS()
{
}

void CHESS::value1()			//player 1 turn
{
	cout << "Enter the choice for Player 1 : ";
	cin >> choice;
}
void CHESS::value2()				//player 2 turn
{
	cout << "Enter the choice for Player 2 : ";
	cin >> choice;
}
void CHESS::display()
{
	 
	cout << "\n\n\n\t\t  _______________________________________________________________________________________________";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t7|    " << rock[0] << "      |     " << knight[0] << "     |     " << bishops[0] << "     |     " << queen[0] << "     |     " << king[0] << "     |     " << bishops[1] << "     |     " << knight[1] << "     |    " << rock[1] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t6|    " << pawn[0] << "      |     " << pawn[1] << "     |     " << pawn[2] << "     |     " << pawn[3] << "     |     " << pawn[4] << "     |     " << pawn[5] << "     |     " << pawn[6] << "     |     " << pawn[7] << "     |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t5|    " << movement[0][0] << "      |    " << movement[0][1] << "      |    " << movement[0][2] << "      |    " << movement[0][3] << "      |    " << movement[0][4] << "      |    " << movement[0][5] << "      |    " << movement[0][6] << "      |    " << movement[0][7] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t5|    " << movement[1][0] << "      |    " << movement[1][1] << "      |    " << movement[1][2] << "      |    " << movement[1][3] << "      |    " << movement[1][4] << "      |    " << movement[1][5] << "      |    " << movement[1][6] << "      |    " << movement[1][7] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t5|    " << movement[2][0] << "      |    " << movement[2][1] << "      |    " << movement[2][2] << "      |    " << movement[2][3] << "      |    " << movement[2][4] << "      |    " << movement[2][5] << "      |    " << movement[2][6] << "      |    " << movement[2][7] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t5|    " << movement[3][0] << "      |    " << movement[3][1] << "      |    " << movement[3][2] << "      |    " << movement[3][3] << "      |    " << movement[3][4] << "      |    " << movement[3][5] << "      |    " << movement[3][6] << "      |    " << movement[3][7] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t6|    " << pawn[8] << "      |     " << pawn[9] << "     |     " << pawn[10] << "     |     " << pawn[11] << "     |     " << pawn[12] << "     |     " << pawn[13] << "     |     " << pawn[14] << "     |     " << pawn[15] << "     |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|";
	cout << "\n\t\t |           |           |           |           |           |           |           |           |";
	cout << "\n\t\t7|    " << rock[2] << "      |     " << knight[1] << "     |     " << bishops[1] << "     |     " << queen[1] << "     |     " << king[1] << "     |     " << bishops[3] << "     |     " << knight[3] << "     |    " << rock[3] << "      |";
	cout << "\n\t\t |___________|___________|___________|___________|___________|___________|___________|___________|" << endl;
	cout << "\n\t\t       0            1           2            3          4           5           6            7" << endl;
}